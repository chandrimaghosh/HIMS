

import java.sql.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author chandrimaghosh/Nishant Shetty
 */

/**
 *
place order is used by doctor and patient to make an order
 */
public class PlaceOrderJFrame extends javax.swing.JFrame {
    Product searchproduct =new Product();
    Availibilty a=new Availibilty();
    ArrayList<Product> searched_products =new ArrayList<>();
    ArrayList<Availibilty> searched_availibility =new ArrayList<>();
    
    
    public int   orderedbyid;
      public String persontype;
    /**
     * Creates new form PlaceOrderJFrame
     * @param whoOrdered
     * @param ptype
     */
    public PlaceOrderJFrame(int whoOrdered, String ptype) {
        
      orderedbyid=whoOrdered;
      persontype=ptype;
        
        initComponents();
         this.setDefaultCloseOperation(this.HIDE_ON_CLOSE);
        Product_Catalogue.setSelectionMode(ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        Product_Catalogue.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null,null,null,null},
                
            },
            new String [] {
                "ProductName", "Desc", "VendorID", "Quantity","Availbe?","Price","ProductId"}
        ));
       
     

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        Product_Catalogue = new javax.swing.JTable();
        Order = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        searchText = new javax.swing.JTextField();
        Search = new javax.swing.JButton();
        quantity = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Product_Catalogue.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        Product_Catalogue.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jScrollPane1.setViewportView(Product_Catalogue);

        Order.setText("Order");
        Order.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OrderActionPerformed(evt);
            }
        });

        jLabel1.setText("Search");

        searchText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTextActionPerformed(evt);
            }
        });

        Search.setText("Search");
        Search.setToolTipText("");
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });

        jLabel2.setText("Quantity");

        jButton1.setText("refresh");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(searchText, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Search)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 930, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(Order)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(14, 14, 14))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(searchText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Search))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Order)
                            .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addContainerGap(223, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(75, 75, 75))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void OrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OrderActionPerformed
        int  quant=Integer.parseInt(quantity.getText());
        int rowSelected = Product_Catalogue.getSelectedRow();
                if(rowSelected > 0){
              int avail_quantity = (Integer) Product_Catalogue.getModel().getValueAt(rowSelected, 3);
              float price= ((Float) Product_Catalogue.getModel().getValueAt(rowSelected, 5)*quant);
              int vid=(Integer) Product_Catalogue.getModel().getValueAt(rowSelected, 2);
              int proid=(Integer)Product_Catalogue.getModel().getValueAt(rowSelected, 6);
               
              if(quant==0){   
                  JOptionPane.showMessageDialog(null,"quantity should be greater than 0");}
              else{
             if((avail_quantity - quant)<0)
                     { JOptionPane.showMessageDialog(null, "Not enough stock");  }
             else
             {  PreparedStatement push_order;
                  try {
                      
                      
                      
                      PreparedStatement update_order_msa;
              
                      update_order_msa = login.con.prepareStatement
                        ("Update MedicineStockAvailability set quantity=? where Vendorid=? and Productid=?");
                      update_order_msa.setInt(1,(avail_quantity - quant) );
                      update_order_msa.setInt(2, vid);
                     
                       update_order_msa.setInt(3, proid);
                      update_order_msa.execute();
                      
                      
                      push_order = login.con.prepareStatement
                        ("insert into OrderTable(Orderedby,VendorId,DoctorId"
                                + ",PatientId, ProductId,OrderPrice,OrderDate,"
                                + "OrderCompExp,Dispatched,"
                                + "Cancelled)values(?,?,?,?,?,?,?,?,?,?)");
                     java.util.Date today = new java.util.Date();
                     java.sql.Date sqlDatetoday = new java.sql.Date(today.getTime());
                   
                      Date expected = new Date(today.getTime() + (1000 * 60 * 60 * 48));
                     java.sql.Date sqlDateExpected = new java.sql.Date(expected.getTime());
                      System.out.println(sqlDateExpected);
                      push_order.setString(1, persontype);
                      push_order.setInt(2, vid);
                      push_order.setInt(3, orderedbyid);
                      push_order.setInt(4, orderedbyid);
                      push_order.setInt(5, proid);
                      push_order.setFloat(6, price);
                      push_order.setDate(7, sqlDatetoday);
                      push_order.setDate(8, sqlDateExpected);
                      push_order.setBoolean(9, false);
                      push_order.setBoolean(10, false);
                      System.out.println();
                      
                      
                      push_order.execute();
                      
                      
                      
                      JOptionPane.showMessageDialog(null, "with id"+orderedbyid+"Order Complete for"+persontype);
                  } catch (SQLException ex) {
                      Logger.getLogger(PlaceOrderJFrame.class.getName()).log(Level.SEVERE, null, ex);
                  
                 }
            	  }
                }
             
                }  
             else
             {JOptionPane.showMessageDialog(null, "Please select a product to order");}
    }//GEN-LAST:event_OrderActionPerformed

    private void searchTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTextActionPerformed

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        String searchEntered=searchText.getText();
            
            PreparedStatement searchq;
        try {
            searchq = login.con.prepareStatement
(" Select prd.Prdname,prd.Prddesp ,prd.Prdprice,msa.Vendorid,msa.quantity,msa.available,prd.Prdid From MedicineStockAvailability msa,"
        + " Product prd Where msa.Productid=prd.Prdid And msa.available is True "
        + "And prd.Prddesp like ?"
        + "ORDER BY quantity DESC");
                String full="%"+searchEntered +"%";
            	searchq.setString(1,full);
                   
            	  ResultSet rs = searchq.executeQuery();
                   
            	   while(rs.next()){
                        
                       Product product=new Product();
                       Availibilty a=new Availibilty();
                       product.setProductName(rs.getString(1));
                       product.setProductDescription(rs.getString(2));
                       product.setProductPrice(rs.getFloat(3));
                       product.setProductId(rs.getInt(7));
                       
                       a.setVendorId(rs.getInt(4));
                       a.setQuantity(rs.getInt(5));
                       a.setAvailble(rs.getBoolean(6));
                       
                       searched_products.add(product);
                       searched_availibility.add(a);
           		    }
                    Iterator<Product> pi = searched_products.iterator();
                    Iterator<Availibilty> ai = searched_availibility.iterator();
                    int rowCount=Product_Catalogue.getRowCount();
                     DefaultTableModel dtm= (DefaultTableModel)Product_Catalogue.getModel();
                    for(int i=rowCount-1;i>0;i--){
                        dtm.removeRow(i);
                        }
        
            while(pi.hasNext()&&ai.hasNext()) {
            Product pro=new Product();
            Availibilty av=new Availibilty();
            
            pro=pi.next();
            av=ai.next();
            Object row[] = new Object[7];
            row[0]=pro.getProductName();
            row[1]=pro.getProductDescription();
            row[2]=av.getVendorId();
            row[3]=av.getQuantity();
            row[4]=av.getAvailble();
            row[5]=pro.getProductPrice();
            row[6]=pro.getProductId();
         
            dtm.addRow(row);
        }
                   
                    } catch (SQLException ex) {
            Logger.getLogger(PlaceOrderJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_SearchActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       this.setVisible(false);
      PlaceOrderJFrame pojf=new PlaceOrderJFrame(orderedbyid,"Doctor");
        pojf.setVisible(true);
              
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Order;
    private javax.swing.JTable Product_Catalogue;
    private javax.swing.JButton Search;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField quantity;
    private javax.swing.JTextField searchText;
    // End of variables declaration//GEN-END:variables
}
